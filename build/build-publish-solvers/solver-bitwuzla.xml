<?xml version="1.0" encoding="UTF-8" ?>

<!--
This file is part of JavaSMT,
an API wrapper for a collection of SMT solvers:
https://github.com/sosy-lab/java-smt

SPDX-FileCopyrightText: 2024 Dirk Beyer <https://www.sosy-lab.org>

SPDX-License-Identifier: Apache-2.0
-->

<!-- vim: set tabstop=8 shiftwidth=4 expandtab sts=4 filetype=ant fdm=marker: -->
<project name="publish-solvers-cvc5" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

    <import file="macros.xml"/>

    <!-- SECTION: Publishing Bitwuzla {{{1
         ==================================================================
    -->
    <target name="package-bitwuzla" depends="">
        <fail unless="bitwuzla.path">
            Please specify the path to Bitwuzla with the flag -Dbitwuzla.path=/path/to/bitwuzla.
            The path has to point to the root Bitwuzla folder, i.e.,
            a checkout of the official git repositoy from 'https://github.com/bitwuzla/bitwuzla'.
            Note that shell substitutions do not work and a full absolute path has to be specified.
        </fail>
        <echo>
            The path is ${bitwuzla.path}
        </echo>

        <fail unless="bitwuzla.customRev">
            Please specify a custom revision with the flag -Dbitwuzla.customRev=XXX.
            The custom revision has to be unique amongst the already known version
            numbers from the ivy repository. The script will append the git revision.
        </fail>

        <fail unless="gmp.path">
            Please specify the path to GMP with the flag -Dgmp.path=/path/to/gmp.
            The path has to point to the root GMP folder with version equal to or larger than 6.1.
            Note that shell substitutions do not work and a full absolute path has to be specified.
        </fail>

        <!-- get a naive version -->
        <exec executable="git" dir="${bitwuzla.path}" outputproperty="bitwuzla.revision"
              failonerror="true">
            <arg value="show"/>
            <arg value="-s"/>
            <arg value="--format=%h"/>
        </exec>
        <property name="bitwuzla.version" value="${bitwuzla.customRev}-g${bitwuzla.revision}"/>
        <echo message="Building Bitwuzla in version '${bitwuzla.version}'"/>

        <!-- add JNI wrapper before compiling Bitwuzla -->
        <copy file="lib/native/source/libbitwuzla/bitwuzla_wrap.c"
              tofile="${bitwuzla.path}/src/bitwuzla_wrap.c"/>

        <exec executable="./configure.py" dir="${bitwuzla.path}" failonerror="true">
            <arg value="--shared"/>
            <arg value="--wipe"/>
        </exec>
        <exec executable="meson" dir="${bitwuzla.path}/build/" failonerror="true">
            <arg value="compile"/>
        </exec>

        <!-- unneeded symbols are removed by Meson automatically -->

        <exec executable="lib/native/source/libbitwuzla/compile.sh" failonerror="true">
            <arg value="${bitwuzla.path}"/>
        </exec>

        <!-- fix RPATH and library dependencies -->
        <exec executable="patchelf" dir="lib/native/source/libbitwuzla/" failonerror="true">
            <arg value="--set-rpath"/>
            <arg value="$ORIGIN"/>
            <arg value="--replace-needed"/>
            <arg value="libbitwuzla.so.0"/>
            <arg value="libbitwuzla.so"/>
            <arg value="libbitwuzlaJNI.so"/>
        </exec>
        <exec executable="patchelf" dir="${bitwuzla.path}/build/src/" failonerror="true">
            <arg value="--set-rpath"/>
            <arg value="$ORIGIN"/>
            <arg value="libbitwuzla.so.0"/>
        </exec>
        <exec executable="patchelf" dir="${bitwuzla.path}/build/src/lib/" failonerror="true">
            <arg value="--set-rpath"/>
            <arg value="$ORIGIN"/>
            <arg value="libbitwuzlals.so"/>
        </exec>
        <exec executable="patchelf" dir="${bitwuzla.path}/build/src/lib/" failonerror="true">
            <arg value="--set-rpath"/>
            <arg value="$ORIGIN"/>
            <arg value="libbitwuzlabv.so"/>
        </exec>
        <exec executable="patchelf" dir="${bitwuzla.path}/build/src/lib/" failonerror="true">
            <arg value="--set-rpath"/>
            <arg value="$ORIGIN"/>
            <arg value="libbitwuzlabb.so"/>
        </exec>
        <exec executable="patchelf" dir="${gmp.path}/.libs/" failonerror="true">
            <arg value="--set-rpath"/>
            <arg value="$ORIGIN"/>
            <arg value="libgmp.so.10.5.0"/>
        </exec>

        <!-- copy library files into directory to be published for IVY -->
        <copy file="lib/native/source/libbitwuzla/libbitwuzlaJNI.so"
              tofile="libbitwuzlaJNI-${bitwuzla.version}.so"/>
        <copy file="${bitwuzla.path}/build/src/lib/libbitwuzlals.so"
              tofile="libbitwuzlals-${bitwuzla.version}.so"/>
        <copy file="${bitwuzla.path}/build/src/lib/libbitwuzlabv.so"
              tofile="libbitwuzlabv-${bitwuzla.version}.so"/>
        <copy file="${bitwuzla.path}/build/src/lib/libbitwuzlabb.so"
              tofile="libbitwuzlabb-${bitwuzla.version}.so"/>
        <copy file="${gmp.path}/.libs/libgmp.so.10.5.0" tofile="libgmp-${bitwuzla.version}.so"/>
        <copy file="${bitwuzla.path}/build/src/libbitwuzla.so.0"
              tofile="libbitwuzla-${bitwuzla.version}.so"/>
    </target>

    <target name="publish-bitwuzla" depends="package-bitwuzla, load-ivy"
            description="Publish Bitwuzla binaries to Ivy repository.">
        <ivy:resolve conf="solver-bitwuzla" file="solvers_ivy_conf/ivy_bitwuzla.xml"/>
        <publishToRepository solverName="Bitwuzla" solverVersion="${bitwuzla.version}"/>
    </target>
</project>
